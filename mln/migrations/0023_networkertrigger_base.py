# Generated by Django 3.2.7 on 2021-09-20 03:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

def create_NMTs(apps, schema_editor): 
	# Create an NMT for each NT
	NetworkerMessageTrigger = apps.get_model("mln", "NetworkerMessageTrigger")
	NetworkerTrigger = apps.get_model("mln", "NetworkerTrigger")
	for trigger in NetworkerTrigger.objects.all():
		NetworkerMessageTrigger.objects.create(networkertrigger_ptr=trigger)

class Migration(migrations.Migration):
	dependencies = [
		('mln', '0022_rename_constraints'),
	]

	operations = [
		# 1. Rename NetworkerMessageTrigger (NMT) to NetworkerTrigger (NT)
		# 2. Migrate NT fields: networker_name, networker, response, source
		# 3. Create NMT: message_body, message_attachment
		# 4. Create an NMT for every existing NT

		# Step 1. Rename NMT to NT
		migrations.RenameModel(
			old_name="NetworkerMessageTrigger",
			new_name="NetworkerTrigger",
		),

		# Step 2. Migrate NetworkerTrigger fields
		migrations.RenameField(  # networker -> networker_name
			model_name="networkertrigger",
			old_name="networker",
			new_name="networker_name",
		),
		migrations.RenameField(  # body --> response
			model_name="networkertrigger",
			old_name="body",
			new_name="response"
		),
		migrations.AddField(  # create networker
			model_name="networkertrigger",
			name="networker",
			field=models.ForeignKey(limit_choices_to={'profile__is_networker': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
		),
		migrations.AlterField(  # make source nullable
			model_name="networkertrigger",
			name="source",
			field=models.TextField(blank=True, null=True, default=True),
		),

		# Step 3. Create (new) NetworkerMessageTrigger
		migrations.CreateModel(
			name="NetworkerMessageTrigger",
			fields=[
				("message_body", models.ForeignKey(to="mln.messagebody", related_name="+", on_delete=models.CASCADE, blank=True, null=True)),
				("message_attachment", models.ForeignKey(to="mln.iteminfo", related_name="+", on_delete=models.CASCADE, blank=True, null=True)),
				("networkertrigger_ptr", models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mln.networkertrigger')),
			]
		),

		migrations.RunPython(create_NMTs, reverse_code=migrations.RunPython.noop),


		# 1. Create NetworkerTrigger (NT): networker, response
		# 2. Migrate all NetworkerMessageTriggers (NMT)
		# 3. Remove outdated NMT fields (networker, body)
		# 4. Create new NMT fields (message_body, message_attachment)
		# 5. Migrate all NetworkerMessageAttachment.trigger

		# # Step 1. Create NMT with required fields
		# migrations.RenameField(  # don't want this to be overriden
  #     model_name='networkermessagetrigger',
  #     old_name='networker',
  #     new_name='networker_name'
  #   ),
		# migrations.CreateModel(
		# 	name='NetworkerTrigger',
		# 	fields=[
		# 		('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
		# 		('networker', models.ForeignKey(null=True, limit_choices_to={'profile__is_networker': True}, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
		# 		('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='mln.messagebody')),
		# 	],
		# ),

		# Step 2. Migrate NMTs to NTs with the same ID
		# migrations.AddField(
		# 	model_name='networkermessagetrigger',
		# 	name='networkertrigger_ptr',
		# 	field=models.OneToOneField(auto_created=True, null=True, default=None, on_delete=django.db.models.deletion.CASCADE, parent_link=True, serialize=False, to='mln.networkertrigger'),
		# 	preserve_default=False,
		# ),
		# migrations.RunPython(migrate_message_triggers, reverse_code=migrations.RunPython.noop),

		# # Step 3. Remove outdated NMT fields
		# migrations.RemoveField(
		# 	model_name='networkermessagetrigger',
		# 	name='body',
		# ),
		# migrations.RemoveField(
		# 	model_name='networkermessagetrigger',
		# 	name='id',
		# ),

		# # Step 4. Create new NMT fields
		# migrations.AddField(
		# 	model_name='networkermessagetrigger',
		# 	name='message_body',
		# 	field=models.ForeignKey(to="mln.messagebody", related_name="+", on_delete=models.CASCADE, blank=True, null=True),
		# 	preserve_default=False,
		# ),
		# migrations.AddField(
		# 	model_name='networkermessagetrigger',
		# 	name='message_attachment',
		# 	field=models.ForeignKey(to="mln.iteminfo", related_name="+", on_delete=models.CASCADE, blank=True, null=True),
		# 	preserve_default=False,
		# ),

		# # Step 5. Migrate NMA.trigger
		# migrations.AlterField(
		# 	model_name='networkermessageattachment',
		# 	name='trigger',
		# 	field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='mln.networkertrigger'),
		# ),
	]
